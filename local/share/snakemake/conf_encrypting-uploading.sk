import os
import pandas as pd
def find_prj_root(path=os.getcwd()):
    if os.path.isfile(os.path.join(path,".PRJ_ROOT")):
        return path
    else:
        if path:
            return find_prj_root(os.path.dirname(path))
        else:
            raise Exception("Can not find the PRJ_ROOT directory")

PRJ_ROOT=find_prj_root()
ROOT = os.path.dirname(PRJ_ROOT)
SRC_DIR=PRJ_ROOT+'/local/src'
SHR_DIR=PRJ_ROOT+'/local/share'
BIN_DIR=PRJ_ROOT+'/local/bin'
DATA=SHR_DIR + "/data"
DATASET=PRJ_ROOT+"/dataset"
LOGS=DATASET+'/encrypting-uploading/logs'
DONE=LOGS+"/done"
USER_FOLDER=DATASET+'/user_folder'
CSV=USER_FOLDER+'/metadata'

### User credentials
EGA_USER=os.environ.get("EGA_USER") # EGA submission portal username (the user should type it before calling snakemake)
EGA_PWD=os.environ.get("EGA_PWD") # EGA submission portal password (the user should type it before calling snakemake)

FTP_TRANSFER=BIN_DIR+"/ftp_transfer"
EGA_CRYPTOR=BIN_DIR+"/ega-cryptor-2.0.0.jar"

EGA_BOX="ftp.ega.ebi.ac.uk"

### User settings
#OS="unix" # unix/windows
PROJECT_NAME=os.environ.get("PROJECT_NAME") # Project name
INPUT_PATH=USER_FOLDER+"/metadata/Samples_Informations_3cols.tsv" # path to the directory containing the samples to upload
OUTPUT_PATH=DATASET+'/encrypting-uploading/EGACryptor' # path to the directory to store encrypted data

# OUTPUT_DIR=DATA + "/biodiversa"

# FILEPATHS = []
# # cols=["alias","fileName","filePath"]
# with open(INPUT_PATH, "r") as f:
#     # df = pd.read_parquet(f, columns=cols)
#     FILEPATHS = f.read().splitlines()

# SAMPLES=[]
# PATHS={}
# for f in FILEPATHS:
#     s, b, p = f.split("\t")
#     SAMPLES.append(b)
#     PATHS[b] = p

# def getFiles(wildcards):
#     files = SAMPLES
#     return files

def getPaths(wildcards):
    paths = []
    import os
    file = CSV+"/All_paths.txt"
    if not os.path.isfile(file):
        file = checkpoints.paths.get().output.paths
    with open(file, 'r') pth:
        for line in pth.readlines():
            paths.append(line.strip())
    return paths

def getNames(wildcards):
    names = []
    import os
    file = CSV+"/All_files-names.txt"
    if not os.path.isfile(file):
        file = checkpoints.paths.get().output.samples
    with open(file, 'r') as fn:
        for line in fn.readlines():
            names.append(line.strip())
    return names
