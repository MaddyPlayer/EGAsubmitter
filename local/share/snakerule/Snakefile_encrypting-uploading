include: "../snakemake/conf_encrypting-uploading.sk"

# ==========================================================================
#                             EGAsubmitter
# ==========================================================================
# This file is part of EGAsubmitter.
#
# EGAsubmitter is Free Software: you can redistribute it and/or modify it
# under the terms found in the LICENSE.rst file distributed
# together with this file.
#
# EGAsubmitter is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# ==========================================================================
# Author: Marco Viviani <marco.viviani@ircc.it>
# ==========================================================================
#                    Snakefile_encrypting-uploading
# This workflow manages the file encryption and their upload
# to user's EGA box
# ==========================================================================

rule all:
    input: expand(DONE+"/filesTransferred-{dataset}.done", dataset=PROJECT_NAME)
    output: DONE+"/encrypted-upload.done"
    shell:
        """
            touch {output}
            echo "All the files have been encrypted and transferred!"
        """

### Create the list file to be used for EGA cryptor: this is a workaround to avoid shell input limit
checkpoint paths:
    input: CSV+"/Samples_Informations_3cols.tsv"
    output: samples=CSV+"/All_files-names.txt", done=LOGS+"/done/paths.done"
    params: OUTPUT_PATH+"/"+PROJECT_NAME
    script: SRC_DIR+"/getPaths.R"
    
rule all_crypted:
    input: getNames
    output: DONE+"/filesCrypted.done"
    shell:
        """
            echo 'All files have been crypted'
            touch {output}
        """

### EGA cryptor is the tool to encrypt each file and check md5: all three files created will be uploaded to EGA
rule ega_cryptor:
    input: find_R1_R2
    output: OUTPUT_PATH+"/{dataset}/{sample}/{file}.gpg", 
            OUTPUT_PATH+"/{dataset}/{sample}/{file}.gpg.md5",
            OUTPUT_PATH+"/{dataset}/{sample}/{file}.md5"
    params: tool=EGA_CRYPTOR, outdir=OUTPUT_PATH+"/{dataset}/{sample}"
    log: LOGS+"/crypted/ega_cryptor-{dataset}_{sample}_{file}.log"
    shell:
        """
            if [ ! -d {params.outdir} ]; then
                mkdir -p {params.outdir}
            fi
            java -jar {params.tool} -i {input} -o {params.outdir} &> {log}
        """

### File transfer using FTP module
rule file_transfer:
    input:  filesList=CSV+"/All_files-names.txt", done=DONE+"/filesCrypted.done"
    output: touch(DONE+"/filesTransferred-{dataset}.done")
    params: user=EGA_USER, pwd=EGA_PWD, tool=FTP_TRANSFER, ega_box=EGA_BOX
    log: LOGS+"/filesTransferred-{dataset}.log"
    shell:
        """
            python3 {params.tool} -i {input.filesList} -c {params.ega_box} -u {params.user} -p {params.pwd} &> {log}
        """
