include: "../snakemake/conf.sk"

# rule encrypt
# rule data_upload
# rule metadata_register_and_submit

FILEPATHS = []
with open(INPUT_PATH, "r") as f:
    FILEPATHS = f.read().splitlines()

SAMPLES=[]
PATHS={}
for f in FILEPATHS:
    s, b, p = f.split("\t")
    SAMPLES.append(b)
    PATHS[b] = p

"""
rule all:
    input: "snakemake.done"

rule environ:
    output: touch("snakemake.done")
    run:
        import os
        print("User login: " + EGA_USER + " " + EGA_PWD)

"""

rule all:
    input: expand(OUTPUT_PATH + "/{sample}.gpg", sample=SAMPLES), 
           expand(OUTPUT_PATH + "/{sample}.gpg.md5", sample=SAMPLES),
           expand(OUTPUT_PATH + "/{sample}.md5", sample=SAMPLES)

rule ega_cryptor:
    input: lambda wildcards: PATHS[wildcards.sample]
    output: OUTPUT_PATH + "/{sample}.gpg", 
            OUTPUT_PATH + "/{sample}.gpg.md5",
            OUTPUT_PATH + "/{sample}.md5",
    params: tool=EGA_CRYPTOR, outdir=OUTPUT_PATH, threads=10
    shell:
        """
            if [ ! -d {params.outdir} ]; then
                mkdir -p {params.outdir}
            fi

            java -jar {params.tool} -i {input} -o {params.outdir} -t {params.threads}
        """

#use ftp transfer through python
rule file_transfer:
    input: OUTPUT_PATH
    output: touch("file_transfer.done")
    params: user=EGA_USER, pwd=EGA_PWD, tool=FTP_TRANSFER, ega_box=EGA_BOX
    shell:
        """
          python {params.tool} -i {input}/* -c {params.ega_box} -u {params.user} -p {params.pwd}
        """
